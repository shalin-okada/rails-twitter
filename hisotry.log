
bundler --version
history
code rails-twitter/
cd rails-docker/
code rails-docker/
ls -la
git clone git@github.com:shalin-okada/rails-twitter.git
ls
cd Documents/
cd ../Downloads/
ping 192.168.210.128
clear
cd
ssh cms
cat known_hosts
ls known_hosts
vi config
pbcopy < id_rsa.pub
ssh-keygen id_rsa.pub
ssh-keygen id_rsa
pbcopy < id_rsa
cat id_rsa >> pbcopy
cd .ssh/
mysql -uroot -p
mysql -uroot
brew services restart mysql@5.6
bundle exec rails db:create db:migrate
bundle install
bundle config --local build.mysql2 "--with-ldflags=-L/usr/local/opt/openssl/lib"
code .
sudo mysql.server start
source ~/.config/fish/config.fish
vi ~/.config/fish/config.fish
brew install mysql@5.6
brew install mysql
sudo rm -rf /usr/local/opt/mysql*
sudo rm -rf /usr/local/share/mysql*
sudo rm -rf /usr/local/etc/my.cnf
sudo rm -rf /usr/local/var/mysql*
sudo rm -rf /usr/local/bin/mysql*
sudo rm -rf /usr/local/Cellar/mysql*
sudo rm -rf /Library/Receipts/mysql-.pkg
sudo rm -rf /Library/PreferencePanes/MySQL.prefPane
sudo rm -rf /Library/StartupItems/MYSQL
sudo rm -rf /usr/local/mysql@5.6
brew uninstall mysql@5.6
brew uninstall mysql
exec $SHELL -l
brew services start mysql@5.6
echo 'set -g fish_user_paths "/usr/local/opt/mysql@5.6/bin" $fish_user_paths' >> ~/.config/fish/config.fish
brew services list
brew list
gem install bundler -v 1.17.3
rbenv install 2.5.1
psql postgres
brew services restart postgresql
brew services start postgresql
brew upgrade postgresql
brew install postgresql
mysql -uroot -ppassword
softwareupdate --install xcode-select
xcode-select --install
cd niji_cms/
git clone git@github.com:ichikaraInc/niji_cms.git
cd Desktop/にじさんじ公式サイト\ リニューアル案件/
go run main.go
docker-compose exec app go run main.go
docker-compose exec app go install github.com/ant0ine/go-json-rest/rest
docker-compose exec app go get github.com/ant0ine/go-json-rest/rest
go install github.com/ant0ine/go-json-rest/rest
ls ~/go/src/
ls ~/go/bin/
go install go-json-rest/rest
go install tour
go install rest
go get github.com/ant0ine/go-json-rest/rest
go get github.com/ant0ine/go-json-rest/
pwd
cd /usr/local/go/bin/
which go
echo $GOPATH
echo $GOHOME
cd bin/
cd go
go env
echo $GOROOT
touch hello.go
touch docker-compose.yml
touch Dockerfile
rm -rf .git/
rm .git/
rm hello hello.go
cd Documents/go-practice/
tour
go tool
go get golang.org/x/tour
rm -rf tour
go tool tour
anyenv -help
vi .config/fish/config.fish
go -v
go help install
./tour
gotour
./hello
go build hello.go
vi hello.go
ls-la
go version
ls 0la
rm -rf .goenv/
rm -rf go
go
brew uninstall go
go which
rm -rf 1.15.0/
ls -la ~/
ls ~/
rm .go-version
go rehash
brew install go
goenv
anyenv uninstall goenv
goenv install 1.15.0
goenv rehash
goenv init -
goenv -h
goenv global 1.15.0
goenv versions
exec fish -l
goenv prefix
echo $GOENV_ROOT
view ~/.config/fish/config.fish
cd go/1.15.0/
ls -la | grep .goenv
ls go/1.15.0/
ls go/
c
go tour
git init
goenv local 1.15.0
cd go-practice/
mkdir go-practice
vi .gitconfig
rm -rf .tooling/
cd .tooling/
rm -rf .subversion/
ll
rm -rf .p2/
cd .p2/
rm -rf .eclipse/
rm -rf .android/
cd .android/
cd envs/
cd .anyenv
open .%6E8C6E53.png
cd shims/
cd .goenv/
which gotour
brew uninstall gotour
anyenv install goenv
anyenv uninstall jenv
jenv versions
anyenv uninstall pyenv
python -v
ls -l /usr/local/bin | grep '../Library/Frameworks/Python.framework/Versions/2.7' | awk '{print $9}' | tr -d @ | xargs rm
cd /usr/local/bin/
ls -l /usr/local/bin | grep '../Library/Frameworks/Python.framework/Versions/2.7'
Sudo rm -rf "/Applications/Python 2.7"
Sudo rm -rf /Library/Frameworks/Python.framework/Versions/2.7
sudo rm -rf "/Applications/Python 2.7"
sudo rm -rf /Library/Frameworks/Python.framework/Versions/2.7
which python
pyenv uninstall 2.7.16
pyenv version
pyenv uninstall
pyenv versions
anyenv install jenv
anyenv install pyenv
goenv uninstall 1.15.0
go env GOPATH
go env $GOPATH
cd $GOPATH/bin
echo $GOENV_ROOR
echo $GOENv_ROOR
echo $GOENv_ROOT
goenv -v
ls .goenv/
cd .anyenv/envs/goenv/shims/
echo $PATH
echo PATH
go tool toru
goenv versions --bare
./gotour
cd goenv*
cd ../libexec/
cd goenv@
cd .anyenv/envs/goenv/
goenv install --list
goenv install
goenv versions --l
goenv help versions
goenv help global
goenv global -l
goenv global
goenv -g
goenv remote
ls plugins/
vim version
cat version
cd versions/
which goenv
goenv local
goenv list
go get github.com/atotto/go-tour-jp/gotour
cat ~/.config/fish/config.fish
go -version
go --version
docker exec -it 081caddffafb bash
docker ps
yarn dev
eslint
nodenv local 13.11.0
cd corporate/
open http://localhost:3000
make up
docker rmi (docker images -q)
docker rm (docker ps -a)
docker stop (docker ps -aq)
ks
git push -u origin
gitmoji -c
git add .
brew install docker-compose
git clone git@github.com:shalin-okada/rails-docker.git
docker rm
rm -rf rails-docker/
docker rm (docker ps -aq)
open localhost:3000
which docker-compose
docker-compose -v
docker -v
rbenv -v
brew cask list
git push --set-upstream origin master
git pull origin master
git pull
vim .git/config
docker-compose run web rake db:create
touch entrypoint.sh
touch Gemfile
rbenv local 2.7.1
ruby -v
ruby -b
mkdir rails-docker
docker help
docker images
yarn upgrade
yarn add
eslint --init
eslint init
yarn global add eslint
yarn add -g eslint
yarn add -D eslint eslint typescript prettier eslint-plugin-react eslint-plugin-prettier eslint-config-prettier @typescript-eslint/parser @typescript-eslint/eslint-plugin @types/react @types/node
touch .prettierrc
yarn add -D prettier eslint eslint-config-prettier eslint-plugin-next eslint-plugin-prettier
yarn add -D @types/styled-components
yarn add styled-components
yarn add --dev typescript @types/react @types/node
touch tsconfig.json
npx create-next-app . --use-yarn
echo "ここからnextの環境構築"
git checkout feature/create_env
git branch feature/create_env
git checkout develop
git branch develop
exit
git clone git@github.com:w-and-d/corporate.git
rm -rf growi/ next-practice/ slack-export/ slack-files/
whois nijisanji.com
yarn global add gitmoji-cli
cd nijisanji-official-server/
vi ~/.config/starship.toml
crontab -e
yarn add -D @types/grecaptcha
git status
brew cask install discord
brew cask install tor-browser
touch .babelrc
yarn add --dev babel-plugin-styled-components
cd next-practice/next-practice/
yarn add --dev @types/styled-components
yarn add --save styled-components
cd next-practice/
npm init next-app
mkdir next-practice
cd slack-files/
mkdir slack-files
cd ~/Documents/slack-export/
ssh -i ~/Downloads/nijisanji-world-minecraft.pem ec2-user@ec2-54-64-77-218.ap-northeast-1.compute.amazonaws.com
ssh 18.180.162.37
ssh 13.115.246.107
code .ssh/
vi .ssh/known_hosts
cat .ssh/known_hosts
gcloud info
gcloud auth list
gcloud init
./google-cloud-sdk/install.sh
mv google-cloud-sdk-302.0.0-darwin-x86_64.tar.gz ~/google-cloud-sdk-302.0.0-darwin-x86_64.tar.gz
gcloud
rm -rf google-cloud-sdk/
cd Downloads/
./google-cloud-sdk/bin/gcloud init
slack-export-viewer -z ./slack.zip
pip --version
cd slack-export/
slack-export-viewer -z ./slack
pip install slack-export-viewer
pip install --upgrade pip
pip -v
docker exec -it centos7sys /bin/bash
docker run -it -d --privileged -it --name centos7sys centos:centos7
docker run -d --pribileged centos:centos7 /sbin/init
docker exec -it centos7 /bin/bash
docker run -d --privileged centos:centos7 /sbin/init
docker run -d --privileged centos7 /sbin/init
docker run -it -d --name centos7 centos:centos7
docker pull centos:centos7
cd growi/
mkdir growi
rm -rf next.js-practice/
rm -rf slack/
rm -rf scrape/ scrape/ ichikara-corporate/
rm -rf teamDrive/
cd teamDrive/
rm -rf slack.zip
brew cask uninstall tor-browser zoom
brew cask uninstall google-chrome-canary firefox mysqlworkbench powershell
brew cask uninstall google-chrome-canary firefox mysql-work-bench powershell
brew cask uninstall google-chrome-canary
git push --set-upstream origin develop
git push --set-upstream origin feature/create_basic-design-document
git ad .
git checkout -b feature/create_basic-design-document
git checkout -b develop
git branch -b develop
sudo ln -s /Users/shalin.okada/.anyenv/envs/.pyenv/shims/python /usr/bin/python
code nijisanji-official-server/
git clone git@github.com:ichikaraInc/nijisanji-official-server.git
rm -rf nijisanji-official-server/
ssh-keygen -f ~/.ssh/id_rsa -p
cp declaration_company20200106.pdf declaration_company20200106_.pdf
touch posts/first-post.js
mkdir posts
cd pages/
git checkout -b practice
yarn run dev
rm README.md
cd next.js-practice/
node -v
git clone git@github.com:shalin-okada/next.js-practice.git
sudo pwsh
pwsh
brew cask install powershell
xcode-select --version
brew prune
brew doctor
brew --version
softwareupdate -l
softwareupdate
Software Update
brew update
which mysql
mysql -v
brew info mysql
brew list | grep mysql
rm teamDrive/*.mp4
touch index.mp4
touch index.movie
mkdir teamDrive
cd Documents
dig -t TXT ichikara.co.jp
dig -t CNAME ichikara.co.jp
dig ichikara.co.jp
sh script.sh
cp -r ./dm/mpdm-yoshitaka.fumoto--yamaka.wawawa--hiroshi.ishiguro-1 ./ishiguro-data
cp ./dm/mpdm-yoshitaka.fumoto--yamaka.wawawa--hiroshi.ishiguro-1 ./ishiguro-data
cat ./ishiguro/dmgroup.json | grep "name" > ishiguro/dmgroups.txt
cd dm/
cat ./ishiguro/dm.json | grep "id" > ishiguro/dms.txt
cat ./ishiguro/dmgroup.json | grep "id" > ishiguro/dmgroups.txt
cat ./ishiguro/dmgroup.json | grep "id" >> ishiguro/dmgroups.txt
cat ./ishiguro/dm.json | grep "id" >> ishiguro/dmgroups.txt
cat dms.json | jq '.[] | select(.members[] == "UBN0RKEAK")' > ishiguro/dm.json
cat ./ishiguro/dmgroup.json | grep "id"
cat mpims.json | jq '.[] | select(.members[] == "UBN0RKEAK")' > ./ishiguro/dmgroup.json
cat mpims.json | jq '.[] | select(.members[] == "UBN0RKEAK")' > filter.json
cat mpims.json | jq '.[] | select(.members[] == "UBN0RKEAK")'
git push --set-upstream origin senses_doc
git push origin
git checkout senses_doc
git branch senses_doc
cd ichikara-corporate/
git clone git@github.com:ichikaraInc/ichikara-corporate.git
curl lulzwrzcle5ks3se.onion
brew cask install tor
sh index.sh
jq -s add res1.json res2.json res3.json res4.json res5.json res6.json res7.json res8.json res9.json res10.json res11.json res12.json res13.json res14.json res15.json res16.json res17.json res18.json res19.json res20.json res21.json res22.json res23.json res24.json res25.json res26.json res27.json res28.json res29.json res30.json res31.json res32.json res33.json res34.json res35.json res36.json res37.json res38.json res39.json res40.json res41.json res42.json res43.json res44.json res45.json res46.json res47.json res48.json res49.json res50.json res51.json res52.json res53.json res54.json res55.json res56.json res57.json res58.json res59.json res60.json res61.json res62.json res63.json res64.json res65.json res66.json res67.json res68.json res69.json res70.json res71.json res72.json res73.json res74.json res75.json res76.json res77.json res78.json res79.json res80.json res81.json res82.json res83.json res84.json res85.json res86.json res87.json res88.json res89.json res90.json res91.json res92.json res93.json res94.json res95.json res96.json res97.json res98.json res99.json res100.json >> comp.json
jq -s add res1.json res2.json res3.json res4.json res5.json res6.json res7.json res8.json res9.json res10.json res11.json res12.json res13.json res14.json res15.json res16.json res17.json res18.json res19.json res20.json res21.json res22.json res23.json res24.json res25.json res26.json res27.json res28.json res29.json res30.json res31.json res32.json res33.json res34.json res35.json res36.json res37.json res38.json res39.json res40.json res41.json res42.json res43.json res44.json res45.json res46.json res47.json res48.json res49.json res50.json res51.json res52.json res53.json res54.json res55.json res56.json res57.json res58.json res59.json res60.json res61.json res62.json res63.json res64.json res65.json res66.json res67.json res68.json res69.json res70.json res71.json res72.json res73.json res74.json res75.json res76.json res77.json res78.json res79.json res80.json res81.json res82.json res83.json res84.json res85.json res86.json res87.json res88.json res89.json res90.json res91.json res92.json res93.json res94.json res95.json res96.json res97.json res98.json res99.json res100.json > comp.json
jq -s add res1.json res2.json res3.json res4.json res5.json res6.json res7.json res8.json res9.json res10.json res11.json res12.json res13.json res14.json res15.json res16.json res17.json res18.json res19.json res20.json res21.json res22.json res23.json res24.json res25.json res26.json res27.json res28.json res29.json res30.json res31.json res32.json res33.json res34.json res35.json res36.json res37.json res38.json res39.json res40.json res41.json res42.json res43.json res44.json res45.json res46.json res47.json res48.json res49.json res50.json res51.json res52.json res53.json res54.json res55.json res56.json res57.json res58.json res59.json res60.json res61.json res62.json res63.json res64.json res65.json res66.json res67.json res68.json res69.json res70.json res71.json res72.json res73.json res74.json res75.json res76.json res77.json res78.json res79.json res80.json res81.json res82.json res83.json res84.json res85.json res86.json res87.json res88.json res89.json res90.json res91.json res92.json res93.json res94.json res95.json res96.json res97.json res98.json res99.json res100.json
jq -h
brew install jq
touch index.sh
rm .python-version
rm -rf *
cd slack/
cd Profile\ 1/
cd Chrome
cd ~/Library/Application\ Support/Google
cd /Applications/Google\ Chrome.app/Contents/MacOS/
python index.py
python --version
pyenv rehash
pyenv global 3.8.4
python -h
python
touch index.py
pip install requests
pip install lxml
pip install beautifulsoup4
pip install chromedriver-binary==84.0.4147.30.0
pip install chromedriver-binary==83.0.4103.116
pip install selenium
pyenv local 3.8.4
mkdir slack
pyenv install 3.8.4
pyenv install -l
pyenv -h
pyenv --list
node index.js
yarn add lighthouse
npm run index.js
touch index.js
yarn add chrome-remote-interface
cd scrape/
mkdir scrape
brew cask install google-chrome-canary
brew tap homebrew/cask-versions
brew tap caskroom/versions
chrome --headless --disable-gpu --remote-debugging-port=9222 https://www.chromestatus.com
chrome \
  --headless \                   # Chrome をヘッドレスモードで実行する
  --disable-gpu \                # 暫定的に必要なフラグ
  --remote-debugging-port=9222 \
  https://www.chromestatus.com   # 開きたい URL（デフォルトは about:blank）
alias chrome="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"
chrome --headless --disable-gpu --remote-debugging-port=9222 https://ichikara.slack.com
chrome
cd Applications/
yarn global add chromy
rm -rf scrape/
yarn add chromy
yarn global remove chromy
touch app.js
rm -rf app.js/
mkdir app.js
cd Documents/scrape/
yarn install -g chromy
yarn -h
gem push --host https://rubygems.pkg.github.com/shalin-okada aad_auth-0.1.0.gem
gem push --key github --host https://rubygems.pkg.github.com/shalin-okada aad_auth-0.1.0.gem
gem build aad_auth.gemspec
echo ":github: Bearer GH_TOKEN" >> ~/.gem/credentials
bundle exec rake release
gitmoji 0c
curl -u shalin_okada https://rubygems.org/api/v1/api_key.yaml > ~/.gem/credentials; chmod 0600 ~/.gem/credentials
bundle exec rspec
./bin/console
irb
cd Documents/ruby-aad-auth/
gh api orgs/ichikaraInc/repos -F per_page="100" -F page="3" --method="GET" >> Desktop/result.json
gh api orgs/ichikaraInc/repos -F per_page="100" -F page="2" --method="GET" >> Desktop/result.json
gh api orgs/ichikaraInc/repos -F per_page="100" -F page="1" --method="GET" > Desktop/result.json
gh api orgs/ichikaraInc/repos -F per_page="300" --method="GET" > Desktop/result.json
gh api orgs/ichikaraInc/repos -F per_page="300" > Desktop/result.json
gh api orgs/ichikaraInc/repos?per_page=300 > Desktop/result.json
gh api orgs/ichikaraInc/repos > Desktop/result.json
touch Desktop/result.json
gh api orgs/ichikaraInc/repos
gh api orgs/ichikaraInc/repos?type=all
gh api orgs/:org/repos
gh api
brew install gh
brew install github-cli
brew install github
npm start
cd active-directory-javascript-graphapi-v2-quickstart
cd ../Documents/ruby-aad-auth/
export PORT=4000
vi server.js
vi authPopup.js
cd JavaScriptSPA/
rm .env
vi .env
touch .env
cd active-directory-javascript-graphapi-v2-quickstart2
cp -r active-directory-javascript-graphapi-v2-quickstart active-directory-javascript-graphapi-v2-quickstart2
cp active-directory-javascript-graphapi-v2-quickstart active-directory-javascript-graphapi-v2-quickstart2
rm active-directory-javascript-graphapi-v2-quickstart.zip
rm active-directory-javascript-graphapi-v2-quickstart\ \(1\).zip
npm install
cd active-directory-javascript-graphapi-v2-quickstart/
git commit --amend --reset-author
git config --global user.email "shalinokada@gmail.com"
git config --global user.name "Shalin Okada"
git aad .
rm .DS_Store
cd auth-aad-dev/ruby/
git remote add origin git@github.com:shalin-okada/ruby-aad-auth.git
cd ruby-aad-auth/
mv aad_auth/ ruby-aad-auth
bundle gem aad_auth -t
rm -rf oss-sfa/
rm -rf initializations/
cd initializations/
open .
cd .%cb_defense/
cd aad_auth/
bundle gem auth_aad -t
bundle gem . -t
git clone git@github.com:shalin-okada/ruby-aad-auth.git aad_auth
mkdir aad_auth
mkdir auth_aad
rbenv global 2.7.1
mv auth-aad auth-aad-dev
rm -rf ruby-aad-auth/
rm -rf auth_aad/
gem update bundler
gem update --system
rbenv versions
rbenv -h
rbenv list
rbenv install --list-all
rbenv install -l
git clone git@github.com:shalin-okada/ruby-aad-auth.git
gem search AzureAD
gem AzureAD
gem search aad
rbenv local 2.7.0
cd ruby/
git add
gem search auth_aad
mv auth_aad/ ruby
rm -rf ruby/
mkdir ruby
rm auth_aad/
cd auth-aad/
mv auth-add-ruby/ auth-aad
mv auth-aad
cd auth-add-ruby/
mv aad-auth-ruby/ auth-add-ruby
cd aad-auth-ruby/
mv aad-auth/ aad-auth-ruby/
cd ./
cd aad-auth/
mkdir aad-auth
touch swagger.yml
rails.sh
touch rails.sh
mkdir initializations
bundle -v
bundle 0v
cd oss-sfa/
git clone git@github.com:shalin-okada/oss-sfa.git
mkdir server
touch nginx.conf
cd nginx/
mkdir nginx
cd container/
mkdir container
mkdir container/nginx
git add .gitignore
curl http://localhost:3000/
EDITOR=vim bin/rails credentials:edit
bundle exec EDITOR=vim rails credentials:edit
bundle exec rails credentials:edit EDITOR=vim
bundle exec rails new . --api --skip-test --skip-bundle
curl https://nijibase.nijisanji.app/
curl http://nijibase.nijisanji.app/
dig nijibase.nijisanji.app
touch extension.json
cd .vscode/
mkdir .vscode
gem install rails
rails -v
rbenv install 2.7.1
anyenv install rbenv
rbenv install --version
rbenv install --list
docker ps -a
docker run -i -t shalin/heelo /bin/bash
docker commit 9b shalin/heelo
docker run -i -t centos /bin/bash
docker start 56
docker stop 56
docker attach --sig-proxy=false 56
docker logs 56
docker run -d centos free -s 3
ckear
sudo docker ps -a
docker run centos echo "hello world"
docker run centos "hello world"
docker rmi busybox
docker inspect centos:latest
sudo docker pull centos
docker pull --help
docker pull -h
docker -h
curl https://nijibase.nijisanji.app
curl nijibase.nijisanji.app
curl 52.68.245.53
dig 52.68.245.53
dig Metabase-Enterprise-Production-1921804235.ap-northeast-1.elb.amazonaws.com
curl http://nijibase.nijisanji.app
dig -t A nijibase.nijisanji.app
docker logs -f 77672c5de2200f78c2469d0a5bcc78d9369165d2461a72cda61f838091f5f3a1
docker exec -it 77672c5de2200f78c2469d0a5bcc78d9369165d2461a72cda61f838091f5f3a1 /bin/sh -c "[ -e /bin/bash ] && /bin/bash || /bin/sh"
docker exec -it c3d911c9579e95a2e703802a3ceb9efbe631df55c01360e4e8b28e8251b00175 /bin/sh -c "[ -e /bin/bash ] && /bin/bash || /bin/sh"
docker exec dispatch-local-web dispatch database upgrade
docker exec web dispatch database upgrade
cd Documents/dispatch-docker/
cd postfix/
cd /var/lib/
./install.sh
pbcopy < jwtRS256.key
ssh-keygen -t rsa -b 4096 -f jwtRS256.key
cd ~/.ssh/
docker exec -it 5a172a566bd9 bash
docker ps -aq
cd dispatch-docker/
git clone https://github.com/Netflix/dispatch-docker.git
rm -rf dispatch/
git clone -b master https://github.com/Netflix/dispatch.git
rm -rf dispatch-docker/
docker exec -it 59d7bb7b532f bash
docker exec -it dispatch-web_1 bash
docker stop (docker ps -a)
ssh -i ~/.ssh/dispatch-test.pem ec2-user@3.115.106.90
ssh -i ~/.ssh/dispatch-test.pem ec2-user@172.31.45.45
ssh -i ~/.ssh/dispatch-test.pem 172.31.45.45
ssh -i ~/.ssh/dispatch-test.pem 3.115.106.90
mv .ssh/netflix-dispatch.pem .ssh/dispatch-test.pem
chmod 600 ~/.ssh/netflix-dispatch.pem
cp Downloads/netflix-dispatch.pem .ssh/
ifconfig | grep inet
ifconfig
rm -rf corp-senses/
brew cask install docker
brew cask install deepl
brew cask install tableplus
ssh -T -i ~/.ssh/www_slee-official_com.pem bitnami@52.196.233.242
chmod 600 ~/.ssh/www_slee-official_com.pem
cp Downloads/www_slee-official_com.pem ~/.ssh
cp Downloads/www_slee_official_com.pem ~/.ssh/
cp Downloads/slee-official-wordpress.pem ~/.ssh/
rm -rf LightsailDefaultKey-ap-northeast-1.pem
cp Downloads/slee-official-wordpress-dev.pem ~/.ssh/
ssh -T -i ~/.ssh/LightsailDefaultKey-ap-northeast-1.pem bitnami@52.196.233.242
ssh -T -i ~/Documents/slee-official-wordpress-dev.pem bitnami@52.196.233.242
chmod 600 ~/Documents/slee-official-wordpress-dev.pem
cd corp-senses/
touch design.md
mkdir corp-senses
brew cask install firefox
dig www.slee-official.com
cd portal-front-develop/
npm run dev
cd portfolio-front/
git commit -am "init commit"
yarn install
vim index.js
mkdir pages
yarn add next react react-dom
yarn init -y
npm install -g yarn
nodenv local 14.3.0
rm 株式会社POL.txt
git clone git@github.com:shalin-okada/portfolio-front.git
ssh -T -i ~/.ssh/id_rsa git@github.com:shalin-okada/portfolio-front.git
ssh T -i ~/.ssh/id_rsa git@github.com:shalin-okada/portfolio-front.git
ssh -vT git@github.com
ssh -i ~/.ssh/id_rsa git@github.com:shalin-okada/portfolio-front.git
ssh -T git@github.com:shalin-okada/portfolio-front.git
nodenv install 14.3.0
nodenv install -l
rbenv install -L
rbenv install
ssh -T git@github.com
vim ~/.config/starship.toml
vim ~/.config/fish/config.fish
anyenv install nodenv
echo $SHELL
brew install anyenv
brew cask install iterm2
brew -v
brew cask install postman
brew uninstall tomcat openjdk heroku heroku-node
brew cask uninstall docker discord
brew cask lis
brew cask uninstall eclipse-ide
brew cask uninstall eclipse
brew cask install eclipse-ide
brew cask install eclipse-java
brew cask install eclipse
cd libexec/
lks
cd /usr/local/Cellar/tomcat/9.0.35/
brew install tomcat
brew install tomact
java
java -v
export JAVA_HOME=`/usr/libexec/java_home -v 11`
sudo mv jdk-11.0.2.jdk/ /Library/Java/JavaVirtualMachines/
mv jdk-11.0.2.jdk/ /Library/Java/JavaVirtualMachines/
cd Desktop/
brew install openjdk
sudo vi ~/.config/fish/config.fish
jenv install -l
jenv
jenv -v
anyenv install javaenv
export JAVA_HOME=`/usr/libexec/java_home -v 14`
/usr/libexec/java_home  -V
sudo mv jdk-14.0.1.jdk/ /Library/Java/JavaVirtualMachines/
cd Desk
mysql.server start
brew upgrade mysql
brew cask install mysqlworkbench
ssh -i /Users/shalin.okada/Downloads/www_slee-official_com.pem bitnami@52.196.233.242
chmod 600 /Users/shalin.okada/Downloads/www_slee-official_com.pem
curl https://www.slee-official.com/health.html
curl www.slee-official.com/health.html
ssh -T www.slee-official.com/health.html
mas install 411213048
brew cask reinstall deepl
vi Info.plist
cd /Applications/DeepL.app/Contents/
git config --global --edit
mas install 539883307
yarn remove eslint-plugin-prettier
make env
cd ../../
yarn remove ts-loader
touch deployProd.yml
touch deployStg.yml
cd workflows/
mkdir workflows
cd .github/
mkdir .github
make create
make cp
npm install -g npm
nodenv local 12.16.0
nodenv install 12.16.0
nodenv install 13.11.0
git branch checkout feature/add-lambda
git fetch origin
cd nijibase-lambda/
git clone git@github.com:ichikaraInc/nijibase-lambda.git
sudo vi /Applications/DeepL.app/Contents/Info.plist
brew cask edit deepl
brew cask create deepl
mas install 425424353
touch README.md
cd CB\ Defense定義書/
ssh app.redash.io
ssh app.redash.io/shalin
brew cask install mysql-work-bench
brew install mysql-work-bench
cd GoogleDrive/
cd Volumes/
ls -l
cd ..
brew cask install google-drive-file-stream
pbcopy < ~/.ssh/id_rsa.pub
ssh-keygen -t rsa -b 4096 -C "shalinokada@gmail.com"
rm -rf cafe-website/
rm -rf cafe-server/
rm -rf darts.games-web/
rm -rf darts.games-api/
vi README.md
cd portal-api/
rm -rf slee開発環境/
rm -rf slee-official/
cd slee-official/
rm Dockerrun.aws.json
mas install 409183694
brew search zoom
brew cask uninstall jamf-migrator
brew cask install jamf-migrator
brew search jamf
brew cask install microsoft-office
brew search office
brew cask uninstall mysqlworkbench
brew cask reinstall slack
brew cask install slack
mas install 926036361
mas install 324613447
mas install 585829637
mas -h
brew install mas
brew search todo
brew cseatch todo
brew cask search
brew cask list | grep "todo"
brew cask install todoist
open Basic認証.txt
touch Basic認証.txt
cd Documents/slee開発環境/
cd slee
git clone https://github.com/ichikaraInc/slee-official.git
cat slee-official-wordpress-dev.pem
ssh -i .ssh/LightsailDefaultKey-ap-northeast-1.pem bitnami@18.180.162.37
ssh -i .ssh/LightsailDefaultKey-ap-northeast-1.pem bitnami@http://18.180.162.37/
ssh -i .ssh/LightsailDefaultKey-ap-northeast-1.pem bitnami@13.115.246.107
ssh -i .ssh/LightsailDefaultKey-ap-northeast-1.pem bitnami@172.26.0.149
chmod 600 .ssh/LightsailDefaultKey-ap-northeast-1.pem
cp Downloads/LightsailDefaultKey-ap-northeast-1.pem ~/.ssh/
mkdir .ssh
cp Downloads/LightsailDefaultKey-ap-northeast-1.pem ~/.ssh/LightsailDefaultKey-ap-northeast-1.pem
cp Downloads/LightsailDefaultKey-ap-northeast-1.pem
zip Dockerrun.aws.json
code Dockerrun.aws.json
touch Dockerrun.aws.json
docker logs -f metabase
docker run -d -p 3000:3000 --name metabase metabase/metabase-enterprise
docker stop 933c3bc25a4e
docker start 933c3bc25a4e
docker run -it metabase/metabase-enterprise
ls =la
docker pull metabase/metabase-enterprise
make down
cd Documents/portal-front/
make db.migrate
make db.create
make build
make install
docker stop (docker ps -q)
brew cask install mysql-workbench
brew install mysqlbench
brew uninstall postgresql
brew uninstall postgre
make dev.env
git clone https://github.com/ichikaraInc/portal-api.git
rm -rf portal-api/
cd Documents/portal-api/
git merge --ff-only @{upstream}
git checkout add-liver-sign-page
cd portal-front/
brew cask uninstall firefox
cd Downloads/bat/
docker container list
sh join.sh
cd Downloads/data/
cat INPUT.csv
cat *.csv > INPUT.csv
cd data
docker-compose exec app sh
docker-compose exec db sh
docker-compose up -d --build
git checkout feature/docker-create
git branch checkout feature/docker-create
git branch -b feature/docker-create
docker-compose  build
Docker-Compose  build
cd Documents/darts.games-api/
cd docker-mysql/
mkdir docker-mysql
cd Docker-Compose/
mkdir Docker-Compose
bundle exec rails new . --api --database=mysql --skip-test --skip-bundle
cd darts.games-api/
rbenv global 2.7.0
git clone https://github.com/shalin-okada/darts.games-api.git
bundle exec rails s
bundle exec rails db:seed
bundle exec rails db:migrate
bundle exec rails db:create
vim config/database.yml
bundle exec rails db:create --trace
git clone https://github.com/ichikaraInc/niji_cms.git
rm -rf niji_cms/
c;ear
createuser -s -P root
initdb /usr/local/var/postgres -E utf8
rm -rf /usr/local/var/postgres/*
rm /usr/local/var/postgres/*
brew services stop postgresql
cd config/
bundle exec gem uninstall rake
bundle install rake
bundle uninstall rake
mysql_secure_installation
mysql login -uroot
mysql login
bundle exec rake db:create
brew services start mysql
brew tap homebrew/services
mysql service.start
bundle config --local build.mysql2 "--with-cppflags=-I/usr/local/opt/openssl/include"
cd Documents/niji_cms/
gem uninstall bundler
view Gemfile.lock
rbenv local 2.5.1
bundle local 2.5.1
c Documents/
cd portal-
cd darts.games-web/
git config --local user.email "shalinokada@gmail.com"
git config --local user.name "Shalin Okada"
yarn add -g gitmoji-cli
bundle exec rails new . --api --database=postgresql --skip-test --skip-bundle
bundle exec rails new -h
rails new -h
rbenv install 2.7.0
git remote
heroku create darts-games-api
heroku create darts.games-api
mkdir model
mkdir lib
mkdir api
yarn add react react-dom next
yarn install react react-dom next
git clone https://github.com/shalin-okada/darts.games-web.git
heroku login
brew tap heroku/brew && brew install heroku
brew install herokucli
brew install heroku-cli
brew install heroku
which git
brew install git
brew uninstall git
git clone https://github.com/ichikaraInc/cafe-website.git
git clone https://github.com/ichikaraInc/cafe-server.git
brew cask uninstall yt-music
brew cask install google-drive-file-stream yt-music
brew cask install coteditor
brew install coteditor
brew install cotEditor
brew install cot-editor
cleaer
nodenv install 12.14.1
cat .node-version
git clone https://github.com/ichikaraInc/portal-front.git
nodenv -v
nodenv global 13.11.0
vi
which anyenv
nodenv -l
anyenv install --init
brew install starship
brew --prefix git
git --version
git -v
brew cask uninstall hyper
vi /Users/shalin.okada/.hyper.js
brew cask install hyper
brew install hyper
brew cask install slack iterm2 google-chrome
brew cask install slack iterm2 google-chrome google-file-stream
brew cask install slack iterm2 google-chrome google-fisl-stream
brew cask install visual-studio-code
